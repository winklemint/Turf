{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\OneDrive\\\\Documents\\\\GitHub\\\\Turf\\\\frontend\\\\src\\\\components\\\\BookNow.js\";\n// import React, { useState, useEffect } from \"react\";\n// import { Link } from \"react-router-dom\";\n// import DatePicker from \"react-datepicker\";\n// import \"react-datepicker/dist/react-datepicker.css\";\n// import \"./BookNow.css\";\n// import SlotBooking from \"./Booking/SlotBooking\";\n\n// function BookingForm() {\n//   const [selectedDate, setSelectedDate] = useState(null);\n//   const [dropdownOptions, setDropdownOptions] = useState([]);\n//   const [selectedOption, setSelectedOption] = useState(\"\");\n//   const [availableSlots, setAvailableSlots] = useState([]);\n//   const [loading, setLoading] = useState(true);\n//   const [showSlotBooking, setShowSlotBooking] = useState(false);\n//   const [errors, setErrors] = useState({});\n\n//   const Postdata = () => {\n//     var payload = JSON.stringify({\n//       \"branch_id\": parseInt(selectedOption),\n//       \"date\": formatDate(selectedDate)\n//     });\n\n//     fetch(\"http://127.0.0.1:8080/user/get/avl/slots\", {\n//       method: \"POST\",\n//       body: payload,\n//     })\n\n//       .then((res) => {\n//         console.log(res);\n//         if (!res.ok) {\n//           throw new Error(\"Network response was not ok\");\n//         }\n//         return res.json();\n//       })\n//       .then((responseJson) => {\n//         // Check if the response has a \"data\" property\n//         if (responseJson && responseJson.available_slots) {\n//           console.log(\"success\");\n//           setAvailableSlots(responseJson.available_slots);\n//           setLoading(false);\n//           setShowSlotBooking(true);\n//         } else {\n//           console.error(\"Response is missing the expected 'data' property:\", responseJson);\n//         }\n//       })\n//       .catch((error) => {\n//         console.error(\"Error while fetching data:\", error);\n//       });\n//   };\n\n//   useEffect(() => {\n//     fetch(\"http://localhost:8080/admin/active/branch\")\n//       .then((res) => res.json())\n//       .then((data) => {\n//         setDropdownOptions(data.data);\n//       });\n//   }, []);\n\n//   const handleChange = (e) => {\n//     const { name, value } = e.target;\n//     setSelectedOption(value);\n\n//     // Validate selected option\n//     if (!value) {\n//       setErrors({ ...errors, selectedOption: \"Please select a branch\" });\n//     } else {\n//       setErrors({ ...errors, selectedOption: \"\" });\n//     }\n//   };\n\n//   const handleSubmit = (e) => {\n//     e.preventDefault();\n//     console.log(JSON.stringify({\n//       \"branch_id\": parseInt(selectedOption),\n//       \"date\": formatDate(selectedDate)}));\n\n//     // Validate form before submitting\n//     if (!selectedOption || !selectedDate) {\n//       setErrors({\n//         selectedOption: !selectedOption ? \"Please select a branch\" : \"\",\n//         selectedDate: !selectedDate ? \"Please select a date\" : \"\",\n//       });\n//       return;\n//     }\n\n//     // Call the Postdata function to fetch data and update availableSlots\n//     Postdata();\n//     setSelectedDate(null);\n//     setSelectedOption(\"\");\n//   };\n\n//   const formatDate = (date) => {\n//     if (date) {\n//       const day = date.getDate();\n//       const month = date.getMonth() + 1;\n//       const year = date.getFullYear();\n//       return `${day.toString().padStart(2, \"0\")}-${month.toString().padStart(2, \"0\")}-${year}`;\n//     }\n//     return \"\";\n//   };\n\n//   return (\n//     <div className=\"booking-form-container\">\n//       <h2>Book Now</h2>\n//       <form onSubmit={handleSubmit}>\n//         <label>\n//           Select Option:\n//           <select\n//             name=\"selectedOption\"\n//             value={selectedOption}\n//             onChange={handleChange}\n//           >\n//             <option value=\"\">Select Branch</option>\n//             {dropdownOptions.map((option) => (\n//               <option key={option.ID} value={option.ID}>\n//                 {option.Branch_name}\n//               </option>\n//             ))}\n//           </select>\n//         </label>\n//         {errors.selectedOption && (\n//           <div className=\"error-message\">{errors.selectedOption}</div>\n//         )}\n//         <br />\n//         <label>\n//           Booking Date:\n//           <DatePicker\n//             placeholderText=\"Select Date\"\n//             selected={selectedDate}\n//             onChange={(date) => setSelectedDate(date)}\n//             dateFormat=\"dd-MM-yyyy\"\n//           />\n//         </label>\n//         {errors.selectedDate && (\n//           <div className=\"error-message\">{errors.selectedDate}</div>\n//         )}\n//         <br />\n//         <button type=\"submit\">Submit</button>\n//         <Link to={\"/\"}>\n//           <button type=\"button\">Close</button>\n//         </Link>\n//       </form>\n//       {showSlotBooking && (\n//         <SlotBooking availableSlots={availableSlots} loading={loading} />\n//       )}\n//     </div>\n//   );\n// }\n\n// export default BookingForm;\n\nimport React, { useRef, useState } from \"react\";\n// Import Swiper React components\nimport { Swiper, SwiperSlide } from \"swiper/react\";\n\n// Import Swiper styles\nimport \"swiper/css\";\nimport \"swiper/css/pagination\";\nimport \"swiper/css/navigation\";\n\n// import './styles.css';\n\n// import required modules\nimport { Pagination, Navigation } from \"swiper/modules\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction BookingForm() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-5\",\n        children: /*#__PURE__*/_jsxDEV(Swiper, {\n          slidesPerView: 1,\n          spaceBetween: 30,\n          loop: true,\n          pagination: {\n            clickable: true\n          },\n          navigation: true,\n          modules: [Pagination, Navigation],\n          className: \"mySwiper\",\n          children: [/*#__PURE__*/_jsxDEV(SwiperSlide, {\n            children: \"Slide 1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(SwiperSlide, {\n            children: \"Slide 2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-7\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex flex-column justify-content-between h-100 pb--50-mob\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-8\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"d-flex justify-content-between align-items-center mt--5 mt--10-mob mb--15 mb--10-mob\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"style_exclusive-badge__338Sr\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"style_round-wrapper__1Pm1_\",\n                    children: \"T\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 194,\n                    columnNumber: 17\n                  }, this), \"\\\"EXCLUSIVE\\\"\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 193,\n                  columnNumber: 15\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 192,\n                columnNumber: 13\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 3\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 168,\n    columnNumber: 5\n  }, this);\n}\n_c = BookingForm;\nexport default BookingForm;\nvar _c;\n$RefreshReg$(_c, \"BookingForm\");","map":{"version":3,"names":["React","useRef","useState","Swiper","SwiperSlide","Pagination","Navigation","jsxDEV","_jsxDEV","BookingForm","className","children","slidesPerView","spaceBetween","loop","pagination","clickable","navigation","modules","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Admin/OneDrive/Documents/GitHub/Turf/frontend/src/components/BookNow.js"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\r\n// import { Link } from \"react-router-dom\";\r\n// import DatePicker from \"react-datepicker\";\r\n// import \"react-datepicker/dist/react-datepicker.css\";\r\n// import \"./BookNow.css\";\r\n// import SlotBooking from \"./Booking/SlotBooking\";\r\n\r\n// function BookingForm() {\r\n//   const [selectedDate, setSelectedDate] = useState(null);\r\n//   const [dropdownOptions, setDropdownOptions] = useState([]);\r\n//   const [selectedOption, setSelectedOption] = useState(\"\");\r\n//   const [availableSlots, setAvailableSlots] = useState([]);\r\n//   const [loading, setLoading] = useState(true);\r\n//   const [showSlotBooking, setShowSlotBooking] = useState(false);\r\n//   const [errors, setErrors] = useState({});\r\n\r\n//   const Postdata = () => {\r\n//     var payload = JSON.stringify({\r\n//       \"branch_id\": parseInt(selectedOption),\r\n//       \"date\": formatDate(selectedDate)\r\n//     });\r\n\r\n//     fetch(\"http://127.0.0.1:8080/user/get/avl/slots\", {\r\n//       method: \"POST\",\r\n//       body: payload,\r\n//     })\r\n\r\n//       .then((res) => {\r\n//         console.log(res);\r\n//         if (!res.ok) {\r\n//           throw new Error(\"Network response was not ok\");\r\n//         }\r\n//         return res.json();\r\n//       })\r\n//       .then((responseJson) => {\r\n//         // Check if the response has a \"data\" property\r\n//         if (responseJson && responseJson.available_slots) {\r\n//           console.log(\"success\");\r\n//           setAvailableSlots(responseJson.available_slots);\r\n//           setLoading(false);\r\n//           setShowSlotBooking(true);\r\n//         } else {\r\n//           console.error(\"Response is missing the expected 'data' property:\", responseJson);\r\n//         }\r\n//       })\r\n//       .catch((error) => {\r\n//         console.error(\"Error while fetching data:\", error);\r\n//       });\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     fetch(\"http://localhost:8080/admin/active/branch\")\r\n//       .then((res) => res.json())\r\n//       .then((data) => {\r\n//         setDropdownOptions(data.data);\r\n//       });\r\n//   }, []);\r\n\r\n//   const handleChange = (e) => {\r\n//     const { name, value } = e.target;\r\n//     setSelectedOption(value);\r\n\r\n//     // Validate selected option\r\n//     if (!value) {\r\n//       setErrors({ ...errors, selectedOption: \"Please select a branch\" });\r\n//     } else {\r\n//       setErrors({ ...errors, selectedOption: \"\" });\r\n//     }\r\n//   };\r\n\r\n//   const handleSubmit = (e) => {\r\n//     e.preventDefault();\r\n//     console.log(JSON.stringify({\r\n//       \"branch_id\": parseInt(selectedOption),\r\n//       \"date\": formatDate(selectedDate)}));\r\n\r\n//     // Validate form before submitting\r\n//     if (!selectedOption || !selectedDate) {\r\n//       setErrors({\r\n//         selectedOption: !selectedOption ? \"Please select a branch\" : \"\",\r\n//         selectedDate: !selectedDate ? \"Please select a date\" : \"\",\r\n//       });\r\n//       return;\r\n//     }\r\n\r\n//     // Call the Postdata function to fetch data and update availableSlots\r\n//     Postdata();\r\n//     setSelectedDate(null);\r\n//     setSelectedOption(\"\");\r\n//   };\r\n\r\n//   const formatDate = (date) => {\r\n//     if (date) {\r\n//       const day = date.getDate();\r\n//       const month = date.getMonth() + 1;\r\n//       const year = date.getFullYear();\r\n//       return `${day.toString().padStart(2, \"0\")}-${month.toString().padStart(2, \"0\")}-${year}`;\r\n//     }\r\n//     return \"\";\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"booking-form-container\">\r\n//       <h2>Book Now</h2>\r\n//       <form onSubmit={handleSubmit}>\r\n//         <label>\r\n//           Select Option:\r\n//           <select\r\n//             name=\"selectedOption\"\r\n//             value={selectedOption}\r\n//             onChange={handleChange}\r\n//           >\r\n//             <option value=\"\">Select Branch</option>\r\n//             {dropdownOptions.map((option) => (\r\n//               <option key={option.ID} value={option.ID}>\r\n//                 {option.Branch_name}\r\n//               </option>\r\n//             ))}\r\n//           </select>\r\n//         </label>\r\n//         {errors.selectedOption && (\r\n//           <div className=\"error-message\">{errors.selectedOption}</div>\r\n//         )}\r\n//         <br />\r\n//         <label>\r\n//           Booking Date:\r\n//           <DatePicker\r\n//             placeholderText=\"Select Date\"\r\n//             selected={selectedDate}\r\n//             onChange={(date) => setSelectedDate(date)}\r\n//             dateFormat=\"dd-MM-yyyy\"\r\n//           />\r\n//         </label>\r\n//         {errors.selectedDate && (\r\n//           <div className=\"error-message\">{errors.selectedDate}</div>\r\n//         )}\r\n//         <br />\r\n//         <button type=\"submit\">Submit</button>\r\n//         <Link to={\"/\"}>\r\n//           <button type=\"button\">Close</button>\r\n//         </Link>\r\n//       </form>\r\n//       {showSlotBooking && (\r\n//         <SlotBooking availableSlots={availableSlots} loading={loading} />\r\n//       )}\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default BookingForm;\r\n\r\nimport React, { useRef, useState } from \"react\";\r\n// Import Swiper React components\r\nimport { Swiper, SwiperSlide } from \"swiper/react\";\r\n\r\n// Import Swiper styles\r\nimport \"swiper/css\";\r\nimport \"swiper/css/pagination\";\r\nimport \"swiper/css/navigation\";\r\n\r\n// import './styles.css';\r\n\r\n// import required modules\r\nimport { Pagination, Navigation } from \"swiper/modules\";\r\n\r\nfunction BookingForm() {\r\n  return (\r\n    <div className=\"container\">\r\n  <div className=\"row\">\r\n    <div className=\"col-md-5\">\r\n      <Swiper\r\n        slidesPerView={1}\r\n        spaceBetween={30}\r\n        loop={true}\r\n        pagination={{\r\n          clickable: true,\r\n        }}\r\n        navigation={true}\r\n        modules={[Pagination, Navigation]}\r\n        className=\"mySwiper\"\r\n      >\r\n        <SwiperSlide>Slide 1</SwiperSlide>\r\n        <SwiperSlide>Slide 2</SwiperSlide>\r\n        {/* ... (up to Slide 9) */}\r\n      </Swiper>\r\n    </div>\r\n\r\n    <div className=\"col-md-7\">\r\n      <div className=\"d-flex flex-column justify-content-between h-100 pb--50-mob\">\r\n        <div className=\"row\">\r\n          <div className=\"col-8\">\r\n            <div className='d-flex justify-content-between align-items-center mt--5 mt--10-mob mb--15 mb--10-mob'>\r\n              <div className=\"style_exclusive-badge__338Sr\">\r\n                <div className=\"style_round-wrapper__1Pm1_\">T</div>\r\n                \"EXCLUSIVE\"\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n  );\r\n}\r\nexport default BookingForm;\r\n"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAC/C;AACA,SAASC,MAAM,EAAEC,WAAW,QAAQ,cAAc;;AAElD;AACA,OAAO,YAAY;AACnB,OAAO,uBAAuB;AAC9B,OAAO,uBAAuB;;AAE9B;;AAEA;AACA,SAASC,UAAU,EAAEC,UAAU,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExD,SAASC,WAAWA,CAAA,EAAG;EACrB,oBACED,OAAA;IAAKE,SAAS,EAAC,WAAW;IAAAC,QAAA,eAC5BH,OAAA;MAAKE,SAAS,EAAC,KAAK;MAAAC,QAAA,gBAClBH,OAAA;QAAKE,SAAS,EAAC,UAAU;QAAAC,QAAA,eACvBH,OAAA,CAACL,MAAM;UACLS,aAAa,EAAE,CAAE;UACjBC,YAAY,EAAE,EAAG;UACjBC,IAAI,EAAE,IAAK;UACXC,UAAU,EAAE;YACVC,SAAS,EAAE;UACb,CAAE;UACFC,UAAU,EAAE,IAAK;UACjBC,OAAO,EAAE,CAACb,UAAU,EAAEC,UAAU,CAAE;UAClCI,SAAS,EAAC,UAAU;UAAAC,QAAA,gBAEpBH,OAAA,CAACJ,WAAW;YAAAO,QAAA,EAAC;UAAO;YAAAQ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAa,CAAC,eAClCd,OAAA,CAACJ,WAAW;YAAAO,QAAA,EAAC;UAAO;YAAAQ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAa,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAE5B;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC,eAENd,OAAA;QAAKE,SAAS,EAAC,UAAU;QAAAC,QAAA,eACvBH,OAAA;UAAKE,SAAS,EAAC,6DAA6D;UAAAC,QAAA,eAC1EH,OAAA;YAAKE,SAAS,EAAC,KAAK;YAAAC,QAAA,eAClBH,OAAA;cAAKE,SAAS,EAAC,OAAO;cAAAC,QAAA,eACpBH,OAAA;gBAAKE,SAAS,EAAC,sFAAsF;gBAAAC,QAAA,eACnGH,OAAA;kBAAKE,SAAS,EAAC,8BAA8B;kBAAAC,QAAA,gBAC3CH,OAAA;oBAAKE,SAAS,EAAC,4BAA4B;oBAAAC,QAAA,EAAC;kBAAC;oBAAAQ,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAK,CAAC,iBAErD;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAK;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACH;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAGN;AAACC,EAAA,GAxCQd,WAAW;AAyCpB,eAAeA,WAAW;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}